{"version":3,"sources":["components/Pion/Pion.tsx","components/Case/Case.tsx","constante/Constante.ts","service/shared/SharedService.ts","service/IA/IAService.ts","components/Damier/Damier.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PionColor","Pion","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","pion","props","x","y","react","className","color","isSelected","isReine","react_fontawesome_index_es","icon","React","Case","CaseColor","react_default","a","createElement","caseColor","onClick","select","undefined","Fragment","components_Pion_Pion","colorCase","WHITE","BLACK","ActionPossible","Constante","isAvance","getPionEntre","list","selectedPion","listPion","_x","Math","abs","_y","push","isDevientReine","ligneBlanc","ligneNoir","iaGame","state","pions","flatMap","element","forEach","movePossible","filter","deplacementposible","concat","dx","dy","validerDeplacementReine","getDeplacement","validerDeplacementPion","getDeplacementsPossible","validerMangerPion","getManger","getMangerPossible","getMovesPossibles","floor","random","length","action","Manger","validerDeplacementInBoard","pionsEntre","Deplacement","nombreLigneDamier","nombreLigneRempli","ia","play","selectPion","deplacerPion","mangerPion","slice","objectSpread","pionEntre","initGame","toConsumableArray","Array","map","Damier","_React$useState","_React$useState2","slicedToArray","setState","jeux","_loop","row","_loop2","components_Case_Case","equal","Deselection","Selection","Rien","getActionPossible","deselectPion","handleClick","asyncToGenerator","regenerator_default","mark","_callee","test","wrap","_context","prev","next","delay","stop","library","add","faCrown","App","components_Damier_Damier","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAKYA,4OAaL,IAiBQC,EAjBf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,QAAAC,MAAA,SAEQC,GACJ,OAAGT,KAAKU,MAAMC,IAAIF,EAAKC,MAAMC,GAAKX,KAAKU,MAAME,IAAIH,EAAKC,MAAME,IAHhE,CAAAL,IAAA,SAAAC,MAAA,WAUI,OAAOK,EAAA,qBAAKC,UAAW,QAASd,KAAKU,MAAMK,MAAQ,KAAOf,KAAKU,MAAMM,WAAW,WAAW,KACtFhB,KAAKU,MAAMO,QAAQJ,EAAA,cAACK,EAAA,EAAD,CAAiBC,KAAK,UAAUN,EAAA,cAAAA,EAAA,oBAX5DjB,EAAA,CAA2BwB,aCSZC,IAEHC,EAFGD,EAZf,SAAcX,GACZ,OACEa,EAAAC,EAAAC,cAAA,OAAKX,UAAW,QAASJ,EAAMgB,UAAWC,QAAS,kBAAIjB,EAAMkB,gBAC3CC,IAAbnB,EAAMD,KAAkBc,EAAAC,EAAAC,cAAAF,EAAAC,EAAAM,SAAA,MAAMP,EAAAC,EAAAC,cAACM,EAAD,CAAMpB,EAAGD,EAAMD,KAAKC,MAAMC,EACrBC,EAAGF,EAAMD,KAAKC,MAAME,EACpBG,MAAOL,EAAMD,KAAKC,MAAMK,MACxBC,WAAYN,EAAMD,KAAKC,MAAMM,WAC7BC,QAASP,EAAMD,KAAKC,MAAMO,YAY/D,SAASe,EAAUrB,EAASC,GAC/B,OAAGD,EAAE,IAAI,EACFC,EAAE,IAAI,EACEU,EAAUW,MAEdX,EAAUY,MAElBtB,EAAE,IAAI,EACEU,EAAUY,MAEdZ,EAAUW,gBAfTX,+CC7BL,IAOKa,EAPCC,EAAb,SAAAA,IAAAtC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,ICGO,SAASC,EAAS5B,EAAUG,GACjC,OAAGH,EAAKC,MAAMK,QAAQpB,EAAUuC,OAASzB,EAAKC,MAAME,EAAEA,EAAE,GAGrDH,EAAKC,MAAMK,QAAQpB,EAAUsC,OAASxB,EAAKC,MAAME,EAAEA,EAAE,EAMnD,SAAS0B,EAAaC,EAA0BC,EAA6B7B,EAASC,GAC3F,IAAI6B,EAAgB,GACpB,QAAkBZ,IAAfW,EACD,IAAK,IAAIE,EAAKF,EAAa9B,MAAMC,EAAE,EAAG+B,GAAMF,EAAa9B,MAAMC,EAAEgC,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAEA,GAAI+B,IACjG,IAAK,IAAIG,EAAKL,EAAa9B,MAAME,EAAE,EAAGiC,GAAML,EAAa9B,MAAME,EAAE+B,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEA,GAAIiC,IACjG,GAAGF,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAE+B,KAAMC,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEiC,GAAI,CACvE,IAAIpC,OAAwBoB,OAclBA,KAXNpB,EAFD+B,EAAa9B,MAAMC,EAAEA,EACnB6B,EAAa9B,MAAME,EAAEA,EACf2B,EAAKC,EAAa9B,MAAMC,EAAEgC,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAE+B,IAAKF,EAAa9B,MAAME,EAAE+B,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEiC,IAEhHN,EAAKC,EAAa9B,MAAMC,EAAEgC,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAE+B,IAAKF,EAAa9B,MAAME,EAAE+B,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEiC,IAGtHL,EAAa9B,MAAME,EAAEA,EACf2B,EAAKC,EAAa9B,MAAMC,EAAEgC,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAE+B,IAAKF,EAAa9B,MAAME,EAAE+B,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEiC,IAEhHN,EAAKC,EAAa9B,MAAMC,EAAEgC,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAE+B,IAAKF,EAAa9B,MAAME,EAAE+B,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEiC,MAIzHJ,EAASK,KAAKrC,GAEhB,MAKR,OAAOgC,EAGF,SAASM,EAAetC,EAAUG,GACvC,IAAIH,EAAKC,MAAMO,QAAQ,CACrB,GAAGR,EAAKC,MAAMK,QAAQpB,EAAUuC,OAAStB,IAAIwB,EAAUY,WACrD,OAAO,EAET,GAAGvC,EAAKC,MAAMK,QAAQpB,EAAUsC,OAASrB,IAAIwB,EAAUa,UACrD,OAAO,EAGX,OAAO,ECxCF,SAASC,EAAOC,EAAapC,GAEhC,IAAI0B,EAAkB,GAEtBU,EAAMC,MAAMC,QAAQ,SAAAC,GAAO,OAAEA,IAASC,QAAQ,SAAAD,QAC7BzB,IAAVyB,GACCb,EAASK,KAAKQ,KAItB,IACIE,EADQf,EAASgB,OAAO,SAAAhD,GAAI,OAAEA,EAAKC,MAAMK,QAAQA,IAC5BsC,QAAQ,SAAAC,GAAO,OAI5C,SAA2BH,EAAa1C,GACpC,IAAIiD,EAAiC,GAGrC,OADAA,GADAA,EAAqBA,EAAmBC,OA8C5C,SAAkCR,EAAa1C,GAC3C,IAAIiD,EAAiC,GACrC,GAAIjD,EAAKC,MAAMO,QAWX,IAAK,IAAI2C,GAAM,GAAIA,GAAM,GAAIA,IACzB,IAAK,IAAIC,GAAM,GAAIA,GAAM,GAAIA,IACtBlB,KAAKC,IAAIgB,KAAMjB,KAAKC,IAAIiB,IAAOlB,KAAKC,IAAIgB,IAAK,GACzCE,EAAwBrD,EAAKmD,EAAGC,EAAGV,IAClCO,EAAmBZ,KAAKiB,EAAetD,EAAKmD,EAAGC,SAd/D,IAAK,IAAID,GAAM,EAAGA,GAAM,EAAGA,IACvB,IAAK,IAAIC,GAAM,EAAGA,GAAM,EAAGA,IACpBlB,KAAKC,IAAIgB,KAAMjB,KAAKC,IAAIiB,IAAY,IAALD,GAC3BI,EAAuBvD,EAAKmD,EAAGC,EAAGV,IACjCO,EAAmBZ,KAAKiB,EAAetD,EAAKmD,EAAGC,IAgBnE,OAAOH,EArEwCO,CAAwBd,EAAM1C,KACrCkD,OAK5C,SAA4BR,EAAa1C,GACrC,IAAIiD,EAAiC,GACrC,GAAIjD,EAAKC,MAAMO,QAWX,IAAK,IAAI2C,GAAM,GAAIA,GAAM,GAAIA,IACzB,IAAK,IAAIC,GAAM,GAAIA,GAAM,GAAIA,IACtBlB,KAAKC,IAAIgB,KAAMjB,KAAKC,IAAIiB,IAAOlB,KAAKC,IAAIgB,IAAK,GACzCM,EAAkBzD,EAAKmD,EAAGC,EAAGV,IAC5BO,EAAmBZ,KAAKqB,EAAU1D,EAAKmD,EAAGC,SAd1D,IAAK,IAAID,GAAM,EAAGA,GAAM,EAAGA,IACvB,IAAK,IAAIC,GAAM,EAAGA,GAAM,EAAGA,IACpBlB,KAAKC,IAAIgB,KAAMjB,KAAKC,IAAIiB,IAAsB,IAAflB,KAAKC,IAAIgB,IACpCM,EAAkBzD,EAAKmD,EAAGC,EAAGV,IAC5BO,EAAmBZ,KAAKqB,EAAU1D,EAAKmD,EAAGC,IAgB9D,OAAOH,EA5BwCU,CAAkBjB,EAAM1C,IAP7B4D,CAAkBlB,EAAMG,KAClE,OAAOE,EAAab,KAAK2B,MAAM3B,KAAK4B,SAASf,EAAagB,SAqC9D,SAASL,EAAU1D,EAAWmD,EAAUC,GACpC,MAAO,CAACpD,KAAKA,EAAKgE,OAAOtC,EAAeuC,OAAO/D,EAAEF,EAAKC,MAAMC,EAAEiD,EAAGhD,EAAEH,EAAKC,MAAME,EAAEiD,GAGpF,SAASK,EAAkBzD,EAAWmD,EAAUC,EAAWV,GACvD,GAAGwB,EAA0BlE,EAAKmD,EAAGC,SAAuDhC,IAAhDsB,EAAMC,MAAM3C,EAAKC,MAAMC,EAAEiD,GAAInD,EAAKC,MAAME,EAAEiD,GAAgB,CAClG,IAAIe,EAAatC,EAAaa,EAAMC,MAAM3C,EAAKA,EAAKC,MAAMC,EAAEiD,EAAGnD,EAAKC,MAAME,EAAEiD,GAC5E,GAAuB,IAApBe,EAAWJ,QAAc/D,EAAKC,MAAMK,QAAS6D,EAAW,GAAGlE,MAAMK,MAChE,OAAO,EAGf,OAAO,EA6BX,SAASgD,EAAetD,EAAWmD,EAAUC,GACzC,MAAO,CAACpD,KAAKA,EAAKgE,OAAOtC,EAAe0C,YAAYlE,EAAEF,EAAKC,MAAMC,EAAEiD,EAAGhD,EAAEH,EAAKC,MAAME,EAAEiD,GAGzF,SAASG,EAAuBvD,EAAWmD,EAAUC,EAAWV,GAC5D,SAAGwB,EAA0BlE,EAAKmD,EAAGC,KAAOxB,EAAS5B,EAAKA,EAAKC,MAAME,EAAEiD,SAAuDhC,IAAhDsB,EAAMC,MAAM3C,EAAKC,MAAMC,EAAEiD,GAAInD,EAAKC,MAAME,EAAEiD,IAM5H,SAASC,EAAwBrD,EAAWmD,EAAUC,EAAWV,GAC7D,SAAGwB,EAA0BlE,EAAKmD,EAAGC,IAA+E,IAAxEvB,EAAaa,EAAMC,MAAM3C,EAAKA,EAAKC,MAAMC,EAAEiD,EAAGnD,EAAKC,MAAME,EAAEiD,GAAIW,aAA8D3C,IAAhDsB,EAAMC,MAAM3C,EAAKC,MAAMC,EAAEiD,GAAInD,EAAKC,MAAME,EAAEiD,IAMvK,SAASc,EAA0BlE,EAAWmD,EAAUC,GACpD,OAAGpD,EAAKC,MAAMC,EAAEiD,EAAGxB,EAAU0C,mBAAqBrE,EAAKC,MAAMC,EAAEiD,GAAI,GAC5DnD,EAAKC,MAAME,EAAEiD,EAAGzB,EAAU0C,mBAAqBrE,EAAKC,MAAME,EAAEiD,GAAI,EF1H9DzB,EACF0C,kBAAoB,GADlB1C,EAEF2C,kBAAoB,EAFlB3C,EAGFa,UAAY,EAHVb,EAIFY,WAAa,WAGZb,mKGmDZ,SAAS6C,EAAG7B,EAAYpC,GACtB,IAAMkE,EAAO/B,EAAOC,EAAMpC,GAC1B,QAAWc,IAAPoD,EACF,OAAO9B,EAET,IAAIxC,EAAIuE,EAAW/B,EAAO8B,EAAKxE,KAAKC,MAAMC,EAAEsE,EAAKxE,KAAKC,MAAME,GAC5D,OAAQqE,EAAKR,QACX,KAAKtC,EAAe0C,YAClB,OAAOM,EAAaxE,EAAEsE,EAAKtE,EAAEsE,EAAKrE,GACpC,KAAKuB,EAAeuC,OAClB,OAAOU,EAAWzE,EAAEsE,EAAKtE,EAAEsE,EAAKrE,GAClC,QACE,OAAOuC,GAwBb,SAAS+B,EAAW/B,EAAaxC,EAASC,GACxC,IAAI2B,EAAQY,EAAMC,MAAMiC,QAClB7C,EAAeW,EAAMX,aACrB/B,EAAO0C,EAAMC,MAAMzC,GAAGC,GAO5B,YANUiB,IAAPpB,IACD8B,EAAK5B,GAAGC,GAAG,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMN,EAAKC,MAAMK,MAAOC,YAAY,EAAKC,QAAQR,EAAKC,MAAMO,gBAEzEY,IAAfW,IACDD,EAAKC,EAAa9B,MAAMC,GAAG6B,EAAa9B,MAAME,GAAG,IAAIhB,EAAK,CAACe,EAAE6B,EAAa9B,MAAMC,EAAEC,EAAE4B,EAAa9B,MAAME,EAAEG,MAAMyB,EAAa9B,MAAMK,MAAOC,YAAY,EAAMC,QAAQuB,EAAa9B,MAAMO,WAEjLnB,OAAAwF,EAAA,EAAAxF,CAAA,GAAIqD,EAAX,CAAkBX,aAAa/B,EAAK2C,MAAMb,IAY5C,SAAS4C,EAAahC,EAAaxC,EAASC,GAC1C,IAAI2B,EAAQY,EAAMC,MAAMiC,QAClB7C,EAAeW,EAAMX,aAS3B,YARkBX,IAAfW,IACDD,EAAKC,EAAa9B,MAAMC,GAAG6B,EAAa9B,MAAME,QAAGiB,EAC9CkB,EAAeP,EAAa5B,GAC7B2B,EAAK5B,GAAGC,GAAG,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMyB,EAAa9B,MAAMK,MAAOC,YAAY,EAAMC,SAAQ,IAEvFsB,EAAK5B,GAAGC,GAAG,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMyB,EAAa9B,MAAMK,MAAOC,YAAY,EAAMC,QAAQuB,EAAa9B,MAAMO,WAG9GnB,OAAAwF,EAAA,EAAAxF,CAAA,GAAUqD,EAAV,CAAiBX,kBAAaX,EAAUuB,MAAMb,IAGhD,SAAS6C,EAAWjC,EAAaxC,EAASC,GACxC,IAAI2B,EAAQY,EAAMC,MAAMiC,QAClB7C,EAAeW,EAAMX,aAC3B,QAAkBX,IAAfW,EAAyB,CAC1B,IAAM+C,EAAYjD,EAAaa,EAAMC,MAAMD,EAAMX,aAAa7B,EAAEC,GAAG,GACnE2B,EAAKC,EAAa9B,MAAMC,GAAG6B,EAAa9B,MAAME,QAAGiB,EAC9CkB,EAAeP,EAAa5B,GAC7B2B,EAAK5B,GAAGC,GAAG,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMyB,EAAa9B,MAAMK,MAAOC,YAAY,EAAMC,SAAQ,IAEvFsB,EAAK5B,GAAGC,GAAG,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMyB,EAAa9B,MAAMK,MAAOC,YAAY,EAAMC,QAAQuB,EAAa9B,MAAMO,eAE7FY,IAAZ0D,IACDhD,EAAKgD,EAAU7E,MAAMC,GAAG4E,EAAU7E,MAAME,QAAGiB,GAG/C,OAAA/B,OAAAwF,EAAA,EAAAxF,CAAA,GAAUqD,EAAV,CAAiBX,kBAAaX,EAAUuB,MAAMb,IAuCzC,SAASiD,IAEd,IADA,IAAIpC,EAAQtD,OAAA2F,EAAA,EAAA3F,CAAI4F,MAAMtD,EAAU0C,oBAAoBa,IAAI,kBAAA7F,OAAA2F,EAAA,EAAA3F,CAAU4F,MAAMtD,EAAU0C,sBACzElE,EAAI,EAAGA,EAAIwB,EAAU2C,kBAAmBnE,IAC/C,IAAK,IAAID,EAAI,EAAGA,EAAIyB,EAAU0C,kBAAmBnE,IAC5CqB,EAAUrB,EAAEC,KAAKU,EAAUY,QAC5BkB,EAAMzC,GAAGC,GAAG,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMpB,EAAUuC,MAAMlB,YAAW,EAAMC,SAAQ,KAInF,IAAK,IAAIL,EAAIwB,EAAU0C,kBAAkB1C,EAAU2C,kBAAmBnE,EAAIwB,EAAU0C,kBAAmBlE,IACrG,IAAK,IAAID,EAAI,EAAGA,EAAIyB,EAAU0C,kBAAmBnE,IAC5CqB,EAAUrB,EAAEC,KAAKU,EAAUY,QAC5BkB,EAAMzC,GAAGC,GAAI,IAAIhB,EAAK,CAACe,EAAEA,EAAEC,EAAEA,EAAEG,MAAMpB,EAAUsC,MAAMjB,YAAW,EAAMC,SAAQ,KAIpF,OAAOmC,EAIMwC,MA1Lf,SAAgBlF,GAOd,IAP2B,IAAAmF,EAEDzE,WACxB,CAACoB,kBAAaX,EAAUuB,MAAMoC,MAHLM,EAAAhG,OAAAiG,EAAA,EAAAjG,CAAA+F,EAAA,GAEpB1C,EAFoB2C,EAAA,GAEbE,EAFaF,EAAA,GAMvBG,EAAK,GANkBC,EAAA,SAOlBtF,GAEP,IADA,IAAIuF,EAAM,GAReC,EAAA,SAShBzF,GACPwF,EAAIrD,KAAKjC,EAAA,cAACwF,EAAD,CAAO1F,EAAGA,EACHJ,IAAKK,EAAE,GAAGD,EACVC,EAAGA,EACHgB,OAAQ,kBAAIoE,EA2ClC,SAAqB7C,EAAaxC,EAASC,GAIzC,OAsEK,SAA2BuC,EAAaxC,EAASC,GACtD,IAAM2B,EAAQY,EAAMC,MACdZ,EAAeW,EAAMX,aACrB/B,EAAO0C,EAAMC,MAAMzC,GAAGC,GAC5B,QAAWiB,IAAPpB,EACF,YAAkBoB,IAAfW,GAA4BA,EAAa8D,MAAM7F,GACzC0B,EAAeoE,YAEjBpE,EAAeqE,UAExB,QAAkB3E,IAAfW,EACD,GAAIA,EAAa9B,MAAMO,SAWrB,GAAG0B,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAEA,KAAKgC,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEA,GAAG,CACrE,IAAIgE,EAAatC,EAAaa,EAAMC,MAAMD,EAAMX,aAAa7B,EAAEC,GAC/D,GAAuB,IAApBgE,EAAWJ,OACZ,OAAOrC,EAAe0C,YAClB,GAAuB,IAApBD,EAAWJ,QAAcI,EAAW,GAAGlE,MAAMK,QAASyB,EAAa9B,MAAMK,MAChF,OAAOoB,EAAeuC,YAhBG,CAC7B,GAAsC,IAAnC/B,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAEA,IAA6C,IAAnCgC,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEA,IAAUyB,EAASG,EAAa5B,GACvG,OAAOuB,EAAe0C,YAExB,GAAsC,IAAnClC,KAAKC,IAAIJ,EAAa9B,MAAMC,EAAEA,IAA6C,IAAnCgC,KAAKC,IAAIJ,EAAa9B,MAAME,EAAEA,GAAQ,CAC/E,IAAM2E,EAAYhD,GAAMC,EAAa9B,MAAMC,EAAEA,GAAG,IAAI6B,EAAa9B,MAAME,EAAEA,GAAG,GAC5E,QAAeiB,IAAZ0D,GAAyBA,EAAU7E,MAAMK,QAAQyB,EAAa9B,MAAMK,MACrE,OAAOoB,EAAeuC,QAe9B,OAAOvC,EAAesE,KAzGTC,CAAkBvD,EAAMxC,EAAEC,IAGrC,KAAKuB,EAAesE,KAClB,OAAOtD,EACT,KAAKhB,EAAeqE,UAClB,OAAOtB,EAAW/B,EAAMxC,EAAEC,GAC5B,KAAKuB,EAAeoE,YAClB,OAuBN,SAAsBpD,GACpB,IAAIZ,EAAQY,EAAMC,MAAMiC,QAClB7C,EAAeW,EAAMX,aAI3B,YAHkBX,IAAfW,IACDD,EAAKC,EAAa9B,MAAMC,GAAG6B,EAAa9B,MAAME,GAAG,IAAIhB,EAAK,CAACe,EAAE6B,EAAa9B,MAAMC,EAAEC,EAAE4B,EAAa9B,MAAME,EAAEG,MAAMyB,EAAa9B,MAAMK,MAAOC,YAAY,EAAOC,QAAQuB,EAAa9B,MAAMO,WAElLnB,OAAAwF,EAAA,EAAAxF,CAAA,GAAIqD,EAAX,CAAkBX,kBAAaX,EAAUuB,MAAMb,IA7BpCoE,CAAaxD,GACtB,KAAKhB,EAAe0C,YAClB,OAAOM,EAAahC,EAAMxC,EAAEC,GAC9B,KAAKuB,EAAeuC,OAClB,OAAOU,EAAWjC,EAAMxC,EAAEC,GAC5B,QACE,OAAOuC,GA3D8ByD,CAAYzD,EAAMxC,EAAEC,KACzCc,UAAWM,EAAUrB,EAAEC,GACvBH,KAAM0C,EAAMC,MAAMzC,GAAGC,OAN9BD,EAAI,EAAGA,EAAIyB,EAAU0C,kBAAmBnE,IAAKyF,EAA7CzF,GAQTsF,EAAKnD,KAAKjC,EAAA,qBAAKC,UAAU,YAAYP,IAAKK,GAAIuF,KAVvCvF,EAAI,EAAGA,EAAIwB,EAAU0C,kBAAmBlE,IAAKsF,EAA7CtF,GAaT,OACEC,EAAA,yBACGoF,EACDpF,EAAA,wBAAQc,QAAS,kBAAIqE,EAAShB,EAAG7B,EAAMxD,EAAUuC,UAAjD,cACArB,EAAA,wBAAQc,QAAS,kBAAIqE,EAAShB,EAAG7B,EAAMxD,EAAUsC,UAAjD,cACApB,EAAA,wBAAQc,QAAO7B,OAAA+G,EAAA,EAAA/G,CAAAgH,EAAAtF,EAAAuF,KAAE,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAtF,EAAA0F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACXJ,EAAO,EADI,YAERA,EAAK,KAFG,CAAAE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAGPC,gBAAM,IAHC,cAIbtB,EAAShB,EAAG7B,EAAMxD,EAAUuC,QAJfiF,EAAAE,KAAA,EAKPC,gBAAM,IALC,OAMbtB,EAAShB,EAAG7B,EAAMxD,EAAUsC,QAC5BgF,IAPaE,EAAAE,KAAA,iCAAAF,EAAAI,SAAAP,OAAjB,eCrCNQ,IAAQC,IAAIC,KAEZ,IAUeC,EAVO,WACpB,OACEpG,EAAAC,EAAAC,cAAA,OAAKX,UAAU,OACbS,EAAAC,EAAAC,cAAA,UAAQX,UAAU,cAChBS,EAAAC,EAAAC,cAACmG,EAAD,SCAYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5G,EAAAC,EAAAC,cAAC2G,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c1ca80f8.chunk.js","sourcesContent":["\r\nimport * as React from 'react';\r\nimport './Pion.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport enum PionColor{\r\n  BLACK = \"black\",\r\n  WHITE = \"white\"\r\n}\r\n\r\nexport interface Props {\r\n  x:number,\r\n  y:number,\r\n  color:PionColor,\r\n  isSelected:boolean,\r\n  isReine:boolean\r\n}\r\n\r\nexport class  Pion extends React.Component<Props> {\r\n\r\n  equal(pion:Pion):boolean{\r\n    if(this.props.x===pion.props.x && this.props.y===pion.props.y){\r\n      return true;\r\n    }\r\n    return false\r\n  }\r\n\r\n  render() {\r\n    return <div className={\"pion \" +this.props.color + \" \" + (this.props.isSelected?\"selected\":\"\")}>\r\n        {this.props.isReine?<FontAwesomeIcon icon=\"crown\"/>:<></>}\r\n     </div>\r\n  }\r\n}\r\n\r\n\r\nexport default Pion;\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport './Case.css';\r\nimport Pion from '../Pion/Pion';\r\n\r\n\r\nexport interface Props {\r\n    x:number,\r\n    y:number,\r\n    pion: Pion|undefined,\r\n    caseColor:CaseColor,\r\n    select : ()=>void\r\n\r\n}\r\n\r\nfunction Case(props:Props) {\r\n  return (\r\n    <div className={\"case \" +props.caseColor} onClick={()=>props.select()}>\r\n        {props.pion===undefined? <></>:<Pion x={props.pion.props.x} \r\n                                            y={props.pion.props.y} \r\n                                            color={props.pion.props.color} \r\n                                            isSelected={props.pion.props.isSelected}\r\n                                            isReine={props.pion.props.isReine}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Case;\r\n\r\nexport enum CaseColor{\r\n    BLACK = \"black\",\r\n    WHITE = \"white\",\r\n}\r\n\r\nexport function colorCase(x:number,y:number):CaseColor{\r\n    if(x%2===0){\r\n        if(y%2===0){\r\n            return CaseColor.WHITE;\r\n        }\r\n        return CaseColor.BLACK;\r\n    }\r\n    if(y%2===0){\r\n        return CaseColor.BLACK;\r\n    }\r\n    return CaseColor.WHITE;\r\n}\r\n","export class Constante{\r\n    static nombreLigneDamier = 10;\r\n    static nombreLigneRempli = 4;\r\n    static ligneNoir = 0\r\n    static ligneBlanc = 9\r\n}\r\n\r\nexport enum ActionPossible{\r\n    Rien,\r\n    Selection,\r\n    Deselection,\r\n    Deplacement,\r\n    Manger\r\n}","import Pion, { PionColor } from \"../../components/Pion/Pion\";\r\nimport { Constante } from \"../../constante/Constante\";\r\n\r\nexport function isAvance(pion:Pion,y:number):boolean{\r\n  if(pion.props.color===PionColor.BLACK && pion.props.y-y<0){\r\n    return true;\r\n  }\r\n  if(pion.props.color===PionColor.WHITE && pion.props.y-y>0){\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getPionEntre(list:(Pion|undefined)[][],selectedPion:Pion|undefined, x:number,y:number):Pion[]{\r\n  let listPion:Pion[]=[]\r\n  if(selectedPion!==undefined){\r\n    for (let _x = selectedPion.props.x+1; _x <= selectedPion.props.x+Math.abs(selectedPion.props.x-x); _x++) {\r\n      for (let _y = selectedPion.props.y+1; _y <= selectedPion.props.y+Math.abs(selectedPion.props.y-y); _y++) {\r\n        if(Math.abs(selectedPion.props.x-_x)===Math.abs(selectedPion.props.y-_y)){\r\n          let pion : Pion|undefined = undefined;\r\n          if(selectedPion.props.x<x){\r\n            if(selectedPion.props.y<y){\r\n              pion = list[selectedPion.props.x+Math.abs(selectedPion.props.x-_x)][selectedPion.props.y+Math.abs(selectedPion.props.y-_y)];\r\n            }else{\r\n              pion = list[selectedPion.props.x+Math.abs(selectedPion.props.x-_x)][selectedPion.props.y-Math.abs(selectedPion.props.y-_y)];\r\n            }\r\n          }else{\r\n            if(selectedPion.props.y<y){\r\n              pion = list[selectedPion.props.x-Math.abs(selectedPion.props.x-_x)][selectedPion.props.y+Math.abs(selectedPion.props.y-_y)];\r\n            }else{\r\n              pion = list[selectedPion.props.x-Math.abs(selectedPion.props.x-_x)][selectedPion.props.y-Math.abs(selectedPion.props.y-_y)];\r\n            }\r\n          }\r\n          if(pion!==undefined){\r\n            listPion.push(pion)\r\n          }\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return listPion;\r\n}\r\n\r\nexport function isDevientReine(pion:Pion,y:number):boolean{\r\n  if(!pion.props.isReine){\r\n    if(pion.props.color===PionColor.BLACK && y===Constante.ligneBlanc){\r\n      return true;\r\n    }\r\n    if(pion.props.color===PionColor.WHITE && y===Constante.ligneNoir){\r\n      return true;\r\n    }\r\n  }\r\n  return false\r\n}","import { ActionPossible, Constante } from \"../../constante/Constante\";\r\nimport Pion, { PionColor } from \"../../components/Pion/Pion\";\r\nimport { State } from \"../../components/Damier/Damier\";\r\nimport { isAvance, getPionEntre } from \"../shared/SharedService\";\r\n\r\n\r\nexport interface ActionIA {\r\n    pion :Pion;\r\n    action :ActionPossible;\r\n    x:number;\r\n    y:number\r\n};\r\n\r\nexport function iaGame(state:State, color :PionColor) : ActionIA{\r\n\r\n    let listPion :Pion[]= []\r\n\r\n    state.pions.flatMap(element=>element).forEach(element=>{\r\n        if(element!==undefined){\r\n            listPion.push(element);\r\n        }\r\n    })\r\n\r\n    let pions = listPion.filter(pion=>pion.props.color===color)\r\n    let movePossible = pions.flatMap(element=>getMovesPossibles(state,element))\r\n    return movePossible[Math.floor(Math.random()*movePossible.length)];\r\n}\r\n\r\nfunction getMovesPossibles(state:State, pion: Pion):ActionIA[]{\r\n    let deplacementposible :ActionIA[] = [];\r\n    deplacementposible = deplacementposible.concat(getDeplacementsPossible(state,pion))\r\n    deplacementposible = deplacementposible.concat(getMangerPossible(state,pion))\r\n    return deplacementposible;\r\n\r\n}\r\n\r\nfunction getMangerPossible (state:State, pion: Pion):ActionIA[]{\r\n    let deplacementposible :ActionIA[] = [];\r\n    if(!pion.props.isReine){\r\n        for (let dx = -2; dx <= 2; dx++) {\r\n            for (let dy = -2; dy <= 2; dy++) {\r\n                if(Math.abs(dx)===Math.abs(dy) && Math.abs(dx)===2 ){\r\n                    if(validerMangerPion(pion,dx,dy,state)){\r\n                        deplacementposible.push(getManger(pion,dx,dy))\r\n                    }\r\n                }\r\n            }   \r\n        }\r\n    }else{\r\n        for (let dx = -10; dx <= 10; dx++) {\r\n            for (let dy = -10; dy <= 10; dy++) {\r\n                if(Math.abs(dx)===Math.abs(dy) && Math.abs(dx)>=2 ){\r\n                    if(validerMangerPion(pion,dx,dy,state)){\r\n                        deplacementposible.push(getManger(pion,dx,dy))\r\n                    }\r\n                }\r\n            }   \r\n        } \r\n    }\r\n    return deplacementposible;\r\n}\r\n\r\nfunction getManger(pion:Pion, dx:number,dy:number):ActionIA{\r\n    return {pion:pion,action:ActionPossible.Manger,x:pion.props.x+dx,y:pion.props.y+dy}\r\n}\r\n\r\nfunction validerMangerPion(pion:Pion, dx:number,dy:number, state:State) : boolean{\r\n    if(validerDeplacementInBoard(pion,dx,dy) && state.pions[pion.props.x+dx][pion.props.y+dy]===undefined){\r\n        let pionsEntre = getPionEntre(state.pions,pion,pion.props.x+dx,pion.props.y+dy)\r\n        if(pionsEntre.length===1 && pion.props.color!== pionsEntre[0].props.color){\r\n            return true;\r\n        }  \r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getDeplacementsPossible (state:State, pion: Pion):ActionIA[]{\r\n    let deplacementposible :ActionIA[] = [];\r\n    if(!pion.props.isReine){\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                if(Math.abs(dx)===Math.abs(dy) && dx!==0 ){\r\n                    if(validerDeplacementPion(pion,dx,dy,state)){\r\n                        deplacementposible.push(getDeplacement(pion,dx,dy))\r\n                    }\r\n                }\r\n            }   \r\n        }\r\n    }else{\r\n        for (let dx = -10; dx <= 10; dx++) {\r\n            for (let dy = -10; dy <= 10; dy++) {\r\n                if(Math.abs(dx)===Math.abs(dy) && Math.abs(dx)>=1 ){\r\n                    if(validerDeplacementReine(pion,dx,dy,state)){\r\n                        deplacementposible.push(getDeplacement(pion,dx,dy))\r\n                    }\r\n                }\r\n            }   \r\n        }\r\n    }\r\n    return deplacementposible;\r\n}\r\n\r\nfunction getDeplacement(pion:Pion, dx:number,dy:number):ActionIA{\r\n    return {pion:pion,action:ActionPossible.Deplacement,x:pion.props.x+dx,y:pion.props.y+dy}\r\n}\r\n\r\nfunction validerDeplacementPion(pion:Pion, dx:number,dy:number, state:State) : boolean{\r\n    if(validerDeplacementInBoard(pion,dx,dy) && isAvance(pion,pion.props.y+dy) && state.pions[pion.props.x+dx][pion.props.y+dy]===undefined){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction validerDeplacementReine(pion:Pion, dx:number,dy:number, state:State) : boolean{\r\n    if(validerDeplacementInBoard(pion,dx,dy) && getPionEntre(state.pions,pion,pion.props.x+dx,pion.props.y+dy).length===0 && state.pions[pion.props.x+dx][pion.props.y+dy]===undefined){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction validerDeplacementInBoard(pion:Pion, dx:number,dy:number) : boolean{\r\n    if(pion.props.x+dx<Constante.nombreLigneDamier && pion.props.x+dx>=0){\r\n        if(pion.props.y+dy<Constante.nombreLigneDamier && pion.props.y+dy>=0){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\n","\r\nimport * as React from 'react';\r\nimport './Damier.css';\r\nimport Case, {colorCase, CaseColor} from '../Case/Case';\r\nimport  Pion, { PionColor } from '../Pion/Pion';\r\nimport { Constante, ActionPossible } from '../../constante/Constante';\r\nimport { iaGame } from '../../service/IA/IAService';\r\nimport { isAvance, getPionEntre, isDevientReine } from '../../service/shared/SharedService';\r\nimport { delay } from 'q';\r\n\r\nexport interface Props {\r\n};\r\n\r\nexport interface State {\r\n  selectedPion:Pion|undefined,\r\n  pions: (undefined|Pion)[][];\r\n};\r\n\r\nfunction Damier(props:Props) {\r\n  \r\n  const [state, setState] = React.useState<State>(\r\n    {selectedPion:undefined,pions:initGame()}\r\n  );\r\n\r\n  let jeux=[];\r\n  for (let y = 0; y < Constante.nombreLigneDamier; y++) {\r\n    let row = [];\r\n    for (let x = 0; x < Constante.nombreLigneDamier; x++) {\r\n      row.push(<Case  x={x}\r\n                      key={y+\"\"+x} \r\n                      y={y} \r\n                      select={()=>setState(handleClick(state,x,y))} \r\n                      caseColor={colorCase(x,y)}\r\n                      pion={state.pions[x][y]}/>);\r\n    }\r\n    jeux.push(<div className=\"board-row\" key={y}>{row}</div>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {jeux}\r\n      <button onClick={()=>setState(ia(state,PionColor.BLACK))}> Black IA </button>\r\n      <button onClick={()=>setState(ia(state,PionColor.WHITE))}> White IA </button>\r\n      <button onClick={async()=>{\r\n        let test = 1;\r\n        while (test<1000) {\r\n          await delay(20)\r\n          setState(ia(state,PionColor.BLACK))\r\n          await delay(20)\r\n          setState(ia(state,PionColor.WHITE))\r\n          test++\r\n        }\r\n      }}> 1000 IA </button>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nfunction ia(state:State,color:PionColor):State{\r\n  const play = iaGame(state,color);\r\n  if (play===undefined){\r\n    return state;\r\n  }\r\n  let x = selectPion(state, play.pion.props.x,play.pion.props.y)\r\n  switch (play.action) {\r\n    case ActionPossible.Deplacement:\r\n      return deplacerPion(x,play.x,play.y)    \r\n    case ActionPossible.Manger:\r\n      return mangerPion(x,play.x,play.y);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction handleClick(state:State, x:number,y:number):State{\r\n\r\n  let action = getActionPossible(state,x,y);\r\n\r\n  switch (action) {\r\n    case ActionPossible.Rien:\r\n      return state;\r\n    case ActionPossible.Selection:\r\n      return selectPion(state,x,y);\r\n    case ActionPossible.Deselection:\r\n      return deselectPion(state);\r\n    case ActionPossible.Deplacement:\r\n      return deplacerPion(state,x,y);   \r\n    case ActionPossible.Manger:\r\n      return mangerPion(state,x,y);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction selectPion(state:State, x:number,y:number):State{\r\n  let list =  state.pions.slice();\r\n  const selectedPion = state.selectedPion;\r\n  const pion = state.pions[x][y];\r\n  if(pion!==undefined){\r\n    list[x][y]=new Pion({x:x,y:y,color:pion.props.color, isSelected: true,isReine:pion.props.isReine})\r\n  }\r\n  if(selectedPion!==undefined){\r\n    list[selectedPion.props.x][selectedPion.props.y]=new Pion({x:selectedPion.props.x,y:selectedPion.props.y,color:selectedPion.props.color, isSelected: false,isReine:selectedPion.props.isReine})\r\n  }\r\n  return {...state, selectedPion:pion,pions:list};\r\n}\r\n\r\nfunction deselectPion(state:State):State{\r\n  let list =  state.pions.slice();\r\n  const selectedPion = state.selectedPion;\r\n  if(selectedPion!==undefined){\r\n    list[selectedPion.props.x][selectedPion.props.y]=new Pion({x:selectedPion.props.x,y:selectedPion.props.y,color:selectedPion.props.color, isSelected: false, isReine:selectedPion.props.isReine})\r\n  }\r\n  return {...state, selectedPion:undefined,pions:list};\r\n}\r\n\r\nfunction deplacerPion(state:State, x:number,y:number):State{\r\n  let list =  state.pions.slice();\r\n  const selectedPion = state.selectedPion;\r\n  if(selectedPion!==undefined){\r\n    list[selectedPion.props.x][selectedPion.props.y]=undefined\r\n    if(isDevientReine(selectedPion,y)){\r\n      list[x][y]=new Pion({x:x,y:y,color:selectedPion.props.color, isSelected: false,isReine:true})\r\n    }else{\r\n      list[x][y]=new Pion({x:x,y:y,color:selectedPion.props.color, isSelected: false,isReine:selectedPion.props.isReine})\r\n    }\r\n  }\r\n  return{...state, selectedPion:undefined,pions:list}\r\n}\r\n\r\nfunction mangerPion(state:State, x:number,y:number):State{\r\n  let list =  state.pions.slice();\r\n  const selectedPion = state.selectedPion;\r\n  if(selectedPion!==undefined){\r\n    const pionEntre = getPionEntre(state.pions,state.selectedPion,x,y)[0];\r\n    list[selectedPion.props.x][selectedPion.props.y]=undefined\r\n    if(isDevientReine(selectedPion,y)){\r\n      list[x][y]=new Pion({x:x,y:y,color:selectedPion.props.color, isSelected: false,isReine:true})\r\n    }else{\r\n      list[x][y]=new Pion({x:x,y:y,color:selectedPion.props.color, isSelected: false,isReine:selectedPion.props.isReine})\r\n    }\r\n    if(pionEntre!==undefined){\r\n      list[pionEntre.props.x][pionEntre.props.y]=undefined\r\n    }\r\n  }\r\n  return{...state, selectedPion:undefined,pions:list}\r\n}\r\n\r\nexport function getActionPossible(state:State, x:number,y:number):ActionPossible{\r\n  const list =  state.pions;\r\n  const selectedPion = state.selectedPion;\r\n  const pion = state.pions[x][y];\r\n  if (pion!==undefined){\r\n    if(selectedPion!==undefined && selectedPion.equal(pion)){\r\n      return ActionPossible.Deselection;\r\n    }\r\n    return ActionPossible.Selection;\r\n  }\r\n  if(selectedPion!==undefined){\r\n    if(!selectedPion.props.isReine){\r\n      if(Math.abs(selectedPion.props.x-x)===1 && Math.abs(selectedPion.props.y-y)===1 && isAvance(selectedPion,y)){\r\n        return ActionPossible.Deplacement;\r\n      }\r\n      if(Math.abs(selectedPion.props.x-x)===2 && Math.abs(selectedPion.props.y-y)===2 ){\r\n        const pionEntre = list[(selectedPion.props.x+x)/2][(selectedPion.props.y+y)/2]\r\n        if(pionEntre!==undefined && pionEntre.props.color!==selectedPion.props.color){\r\n          return ActionPossible.Manger;\r\n        }\r\n      }\r\n    }else{\r\n      if(Math.abs(selectedPion.props.x-x)===Math.abs(selectedPion.props.y-y)){\r\n        let pionsEntre = getPionEntre(state.pions,state.selectedPion,x,y)\r\n        if(pionsEntre.length===0){\r\n          return ActionPossible.Deplacement;\r\n        }else if(pionsEntre.length===1 && pionsEntre[0].props.color!== selectedPion.props.color){\r\n          return ActionPossible.Manger;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  return ActionPossible.Rien;\r\n}\r\n\r\nexport function initGame():(undefined|Pion)[][]{\r\n  let pions = [...Array(Constante.nombreLigneDamier)].map(() => [...Array(Constante.nombreLigneDamier)])\r\n  for (let y = 0; y < Constante.nombreLigneRempli; y++) {\r\n    for (let x = 0; x < Constante.nombreLigneDamier; x++) {\r\n      if(colorCase(x,y)===CaseColor.BLACK){\r\n        pions[x][y]=new Pion({x:x,y:y,color:PionColor.BLACK,isSelected:false,isReine:false})\r\n      }\r\n    }\r\n  }\r\n  for (let y = Constante.nombreLigneDamier-Constante.nombreLigneRempli; y < Constante.nombreLigneDamier; y++) {\r\n    for (let x = 0; x < Constante.nombreLigneDamier; x++) {\r\n      if(colorCase(x,y)===CaseColor.BLACK){\r\n        pions[x][y]= new Pion({x:x,y:y,color:PionColor.WHITE,isSelected:false,isReine:false});\r\n      }\r\n    }\r\n  }\r\n  return pions;\r\n}\r\n\r\n\r\nexport default Damier;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCrown } from '@fortawesome/free-solid-svg-icons'\r\nimport Damier from './components/Damier/Damier';\r\n\r\nlibrary.add(faCrown)\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Damier></Damier>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}